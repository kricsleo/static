{"path":"vertical-align","title":"","summary":"今天又着了vertical-align的道了场景：多个display:inline-block的div排在一行，他们的宽高内外边距都是相同的，唯一不同的是div里面的多行文本，有的是一行，有的是多行，","text":"今天又着了vertical-align的道了场景：多个display:inline-block的div排在一行，他们的宽高内外边距都是相同的，唯一不同的是div里面的多行文本，有的是一行，有的是多行，然后div就会在水平方向参差不齐，如下![image-20211102105506044](/Users/shengfeng.xu/Library/Application Support/typora-user-images/image-20211102105506044.png)开发阶段文本都是一行的，所以没看出问题，提测之后数据出现了多行文本导致没有对齐，一个bug产生了，当时看到第一反应就是水平方向的对齐问题十有八九是vertical-align导致的，手动给div.box添加一个vertical-align:middle临时解决问题，还是要知道问题产生的根源是什么。我们知道vertical-align影响的是元素的baseline等参考线和它父元素的baseline等参考线的对齐关系，对于文本元素我们比较好按照常用的字母x来定位参考线位置，但是对于一个里面可能含有多个子元素的inline-block元素而言，它的baseline在哪呢？The baseline of an ‘inline-block’ is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its ‘overflow’ property has a computed value other than ‘visible’, in which case the baseline is the bottom margin edge.––w3c这个规则我也是在查找资料的过程中第一次知道，按照这个规则重新来看我们上面的布局，box元素里面有一个h5和p元素，p元素是最后一个行元素( in-flow line boxes)，那么p元素的baseline就是父元素box元素的baseline，所以三个box元素水平对齐时的参考位置就变成了它们里面的三个p元素对齐，这与图中的表现是一致的，三个p元素底部对齐(多行文本时每一行文本都有自己的baseline，按照「最后一个行元素」的规则使用最后一行元素的baseline)，这导致它们的父元素box没有对齐为什么添加vertical-align:middle可以让box对齐？我是真的很烦这个属性的，相关的解释和资料看过很多次，还是觉得很烦，一句话此时：元素box的中部与父元素的基线加上父元素x-height（x高度）的一半对齐。这个时候box的自身高度参与排布规则，而不是默认的baseline，所以避免了上面的问题(改为top``bottom等也是一样的效果)。我们还可以改变overflow属性使其不为visible，比如overflow:hidden来达到同样的效果，这个时候是因为我们破坏了上面w3c规则的限定条件 if its 'overflow' property has a computed value other than 'visible', box元素的baseline不再由p元素决定，而是由自身的底部位置来决定，这样三个box的参考位置就相同了，也就能水平对齐了![image-20211102114520610](/Users/shengfeng.xu/Library/Application Support/typora-user-images/image-20211102114520610.png)","html":"<p>今天又着了<code>vertical-align</code>的道了</p>\n<p>场景：多个<code>display:inline-block</code>的<code>div</code>排在一行，他们的宽高内外边距都是相同的，唯一不同的是<code>div</code>里面的多行文本，有的是一行，有的是多行，然后<code>div</code>就会在水平方向参差不齐，如下</p>\n<p>![image-20211102105506044](/Users/shengfeng.xu/Library/Application Support/typora-user-images/image-20211102105506044.png)</p>\n<p>开发阶段文本都是一行的，所以没看出问题，提测之后数据出现了多行文本导致没有对齐，一个bug产生了，当时看到第一反应就是水平方向的对齐问题十有八九是<code>vertical-align</code>导致的，手动给<code>div.box</code>添加一个<code>vertical-align:middle</code>临时解决问题，还是要知道问题产生的根源是什么。</p>\n<p>我们知道<code>vertical-align</code>影响的是元素的<code>baseline</code>等参考线和它父元素的<code>baseline</code>等参考线的对齐关系，对于文本元素我们比较好按照常用的字母<code>x</code>来定位参考线位置，但是对于一个里面可能含有多个子元素的<code>inline-block</code>元素而言，它的<code>baseline</code>在哪呢？</p>\n<blockquote>\n<p>The baseline of an ‘inline-block’ is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its ‘overflow’ property has a computed value other than ‘visible’, in which case the baseline is the bottom margin edge.</p>\n<p>––<a href=\"https://www.w3.org/TR/CSS2/visudet.html#leading\">w3c</a></p>\n</blockquote>\n<p>这个规则我也是在查找资料的过程中第一次知道，按照这个规则重新来看我们上面的布局，<code>box</code>元素里面有一个<code>h5</code>和<code>p</code>元素，<code>p</code>元素是最后一个行元素(<code> in-flow line boxes</code>)，那么<code>p</code>元素的<code>baseline</code>就是父元素<code>box</code>元素的<code>baseline</code>，所以三个<code>box</code>元素水平对齐时的参考位置就变成了它们里面的三个<code>p</code>元素对齐，这与图中的表现是一致的，三个<code>p</code>元素底部对齐(多行文本时每一行文本都有自己的<code>baseline</code>，按照「最后一个行元素」的规则使用最后一行元素的<code>baseline</code>)，这导致它们的父元素<code>box</code>没有对齐</p>\n<p>为什么添加<code>vertical-align:middle</code>可以让<code>box</code>对齐？</p>\n<p>我是真的很烦这个属性的，相关的解释和资料看过很多次，还是觉得很烦，一句话此时：元素<code>box</code>的中部与父元素的基线加上父元素x-height（<a href=\"https://www.zhangxinxu.com/wordpress/2015/06/about-letter-x-of-css/\">x高度</a>）的一半对齐。这个时候<code>box</code>的自身高度参与排布规则，而不是默认的<code>baseline</code>，所以避免了上面的问题(改为<code>top``bottom</code>等也是一样的效果)。</p>\n<p>我们还可以改变<code>overflow</code>属性使其不为<code>visible</code>，比如<code>overflow:hidden</code>来达到同样的效果，这个时候是因为我们破坏了上面w3c规则的限定条件<code> if its 'overflow' property has a computed value other than 'visible'</code>, <code>box</code>元素的<code>baseline</code>不再由<code>p</code>元素决定，而是由自身的底部位置来决定，这样三个<code>box</code>的参考位置就相同了，也就能水平对齐了</p>\n<p>![image-20211102114520610](/Users/shengfeng.xu/Library/Application Support/typora-user-images/image-20211102114520610.png)</p>\n","c_time":"2021-11-18 03:05:44","m_time":"2021-11-18 03:05:44"}